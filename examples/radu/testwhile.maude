mod TESTWHILE is
 protecting PLEXILITE-PREDS .


op testwhile : -> Plexil .
eq testwhile = list(
			'testwhile,
			(('distance : v(5)) ),
			(
  			(endc:	areChildren?('testwhile, finished)),
  			(inv:	(not (((isOutcomeFailure?(('Enter . 'testwhile))) or (isOutcomeFailure?(('Drive . 'testwhile))))))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	const(v(true)))
  			),
  			(Enter Drive)
			) .


op Enter : -> Plexil .
eq Enter = assignment(
			'Enter,
			nilocdecl,
			(
  			(endc:	const(v(true))),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	const(v(true))),
  			(priority: 1)
  			),
			(('distance . 'testwhile) := const(v(3)))
			) .


op Drive : -> Plexil .
eq Drive = list(
			'Drive,
			(('ep2cp-test : v(false)) ),
			(
  			(endc:	areChildren?('Drive . 'testwhile, finished)),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	(isStatus?(('Enter . 'testwhile),finished)))
  			),
  			(ep2cp-WhileBodyd1e47)
			) .


op ep2cp-WhileBodyd1e47 : -> Plexil .
eq ep2cp-WhileBodyd1e47 = list(
			'ep2cp-WhileBodyd1e47,
			nilocdecl,
			(
  			(endc:	areChildren?('ep2cp-WhileBodyd1e47 . 'Drive . 'testwhile, finished)),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	const(v(true)))
  			),
  			(ep2cp-WhileSetupd1e47 ep2cp-WhileTrued1e47)
			) .


op ep2cp-WhileSetupd1e47 : -> Plexil .
eq ep2cp-WhileSetupd1e47 = assignment(
			'ep2cp-WhileSetupd1e47,
			nilocdecl,
			(
  			(endc:	const(v(true))),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	const(v(true))),
  			(priority: 1)
  			),
			(('ep2cp-test . 'Drive . 'testwhile) := var(('distance . 'testwhile)) > const(v(0)))
			) .


op ep2cp-WhileTrued1e47 : -> Plexil .
eq ep2cp-WhileTrued1e47 = list(
			'ep2cp-WhileTrued1e47,
			nilocdecl,
			(
  			(endc:	areChildren?('ep2cp-WhileTrued1e47 . 'ep2cp-WhileBodyd1e47 . 'Drive . 'testwhile, finished)),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	(var(('ep2cp-test . 'Drive . 'testwhile)) equ const(v(true)))),
  			(skip:	((isStatus?(('ep2cp-WhileSetupd1e47 . 'ep2cp-WhileBodyd1e47 . 'Drive . 'testwhile),finished))) and ((not ((var(('ep2cp-test . 'Drive . 'testwhile)) equ const(v(true))))))),
  			(startc:	((isStatus?(('ep2cp-WhileSetupd1e47 . 'ep2cp-WhileBodyd1e47 . 'Drive . 'testwhile),finished))) and ((var(('ep2cp-test . 'Drive . 'testwhile)) equ const(v(true)))))
  			),
  			(ep2cp-WhileActiond1e47 ep2cp-WhileRetestd1e47)
			) .


op ep2cp-WhileActiond1e47 : -> Plexil .
eq ep2cp-WhileActiond1e47 = list(
			'ep2cp-WhileActiond1e47,
			nilocdecl,
			(
  			(endc:	areChildren?('ep2cp-WhileActiond1e47 . 'ep2cp-WhileTrued1e47 . 'ep2cp-WhileBodyd1e47 . 'Drive . 'testwhile, finished)),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	const(v(true)))
  			),
  			(Drive--CHILD--1)
			) .


op Drive--CHILD--1 : -> Plexil .
eq Drive--CHILD--1 = assignment(
			'Drive--CHILD--1,
			nilocdecl,
			(
  			(endc:	const(v(true))),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	const(v(true))),
  			(priority: 1)
  			),
			(('distance . 'testwhile) := (var(('distance . 'testwhile)) - const(v(1))))
			) .


op ep2cp-WhileRetestd1e47 : -> Plexil .
eq ep2cp-WhileRetestd1e47 = assignment(
			'ep2cp-WhileRetestd1e47,
			nilocdecl,
			(
  			(endc:	const(v(true))),
  			(inv:	const(v(true))),
  			(post:	const(v(true))),
  			(pre:	const(v(true))),
  			(repeatc:	const(v(false))),
  			(skip:	const(v(false))),
  			(startc:	(isStatus?(('ep2cp-WhileActiond1e47 . 'ep2cp-WhileTrued1e47 . 'ep2cp-WhileBodyd1e47 . 'Drive . 'testwhile),finished))),
  			(priority: 1)
  			),
			(('ep2cp-test . 'Drive . 'testwhile) := var(('distance . 'testwhile)) > const(v(0)))
			) .


op testwhileEnv : -> ContextList .
eq testwhileEnv = mtcontext .


endm

eof