//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-257 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.03 at 09:23:03 AM COT 
//


package org.nianet.plexil.plexilxml2maude.jaxbmodel;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import org.nianet.plexil.plexilxml2maude.jaxbmodel.ext.BooleanExpression;
import org.nianet.plexil.plexilxml2maude.jaxbmodel.ext.StateOutcomeCheckingExpression;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;group ref="{}NodeState" maxOccurs="2" minOccurs="2"/>
 *         &lt;group ref="{}NodeOutcome" maxOccurs="2" minOccurs="2"/>
 *         &lt;group ref="{}NodeFailure" maxOccurs="2" minOccurs="2"/>
 *         &lt;group ref="{}NodeCommandHandle" maxOccurs="2" minOccurs="2"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "nodeState",
    "nodeOutcome",
    "nodeFailure",
    "nodeCommandHandle"
})
@XmlRootElement(name = "EQInternal")
public class EQInternal extends StateOutcomeCheckingExpression {

    @Override
	public String getExpression(Map<String,String> variablesContext) {
    	if (this.isStateCheckingExpression()){
    		return "(isStatus?(("+this.getStateVariable()+"),"+this.getVariableValue()+"))";	
    	}
    	else if (this.isOutcomeCheckingExpression()){
    		if (this.getVariableValue().equalsIgnoreCase("failure")){
    			return "(isOutcomeFailure?(("+this.getStateVariable()+")))";
    		}
    		else{
    			//TODO check specific failure types and generate them as 'fail' predicates: i.e. fail(parentFail)
    			return "(isOutcome?(("+this.getStateVariable()+"),"+this.getVariableValue()+"))";	
    		}
    		
    	}
    	else{
    		throw new RuntimeException("The given EQInternal expression is neither a Status or Outcome verification expression:"+this);
    	}
    	    		
	}

	@XmlElementRefs({
        @XmlElementRef(name = "NodeStateVariable", type = NodeStateVariable.class),
        @XmlElementRef(name = "NodeStateValue", type = JAXBElement.class)
    })
    protected List<Object> nodeState;
    @XmlElementRefs({
        @XmlElementRef(name = "NodeOutcomeValue", type = JAXBElement.class),
        @XmlElementRef(name = "NodeOutcomeVariable", type = NodeOutcomeVariable.class)
    })
    protected List<Object> nodeOutcome;
    @XmlElementRefs({
        @XmlElementRef(name = "NodeFailureValue", type = JAXBElement.class),
        @XmlElementRef(name = "NodeFailureVariable", type = NodeFailureVariable.class)
    })
    protected List<Object> nodeFailure;
    @XmlElementRefs({
        @XmlElementRef(name = "NodeCommandHandleVariable", type = NodeCommandHandleVariable.class),
        @XmlElementRef(name = "NodeCommandHandleValue", type = JAXBElement.class)
    })
    protected List<Object> nodeCommandHandle;

    /**
     * Gets the value of the nodeState property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nodeState property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNodeState().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NodeStateVariable }
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     * 
     */
    public List<Object> getNodeState() {
        if (nodeState == null) {
            nodeState = new ArrayList<Object>();
        }
        return this.nodeState;
    }

    /**
     * Gets the value of the nodeOutcome property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nodeOutcome property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNodeOutcome().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link NodeOutcomeVariable }
     * 
     * 
     */
    public List<Object> getNodeOutcome() {
        if (nodeOutcome == null) {
            nodeOutcome = new ArrayList<Object>();
        }
        return this.nodeOutcome;
    }

    /**
     * Gets the value of the nodeFailure property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nodeFailure property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNodeFailure().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link NodeFailureVariable }
     * 
     * 
     */
    public List<Object> getNodeFailure() {
        if (nodeFailure == null) {
            nodeFailure = new ArrayList<Object>();
        }
        return this.nodeFailure;
    }

    /**
     * Gets the value of the nodeCommandHandle property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nodeCommandHandle property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNodeCommandHandle().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NodeCommandHandleVariable }
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     * 
     */
    public List<Object> getNodeCommandHandle() {
        if (nodeCommandHandle == null) {
            nodeCommandHandle = new ArrayList<Object>();
        }
        return this.nodeCommandHandle;
    }

}
